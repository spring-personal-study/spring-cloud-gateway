server:
  port: 8080

eureka:
  client:
    register-with-eureka: true # 로드밸런싱 설정을 위한 true 설정.
    fetch-registry: true # 주기적으로 변경사항을 서버로부터 받아오기 여부
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: api-gateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # url 재작업. http://uri:6503/login 으로 요청시 http://uri:6503/user-service/login으로 변경하여 전달
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationFilter
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
#        - id: first-service
##          uri: http://localhost:8081/
#          uri: lb://MSA-FIRST-SERVICE # 서비스 디스커버리에 등록된 이름으로 찾기 위해 다음과 같이 설정
#          predicates:
#            - Path=/first-service/**
#          filters:
##            - AddRequestHeader=first-request, first-request-header2
##            - AddResponseHeader=first-response, first-response-header2
#            - CustomFilter
#        - id: second-service
##          uri: http://localhost:8082/
#          uri: lb://MSA-SECOND-SERVICE
#          predicates:
#            - Path=/second-service/**
#          filters:
##            - AddRequestHeader=second-request, second-request-header2
##            - AddResponseHeader=second-response, second-response-header2
#            - name: CustomFilter
#            - name: LoggingFilter
#              args:
#                baseMessage: Hi, there.
#                preLogger: true
#                postLogger: true